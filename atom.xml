<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的码</title>
  
  <subtitle>dongjiawang</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dongjiawang.top/"/>
  <updated>2020-09-27T02:34:43.628Z</updated>
  <id>https://dongjiawang.top/</id>
  
  <author>
    <name>dongjiawang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页图片添加点击方法获取图片</title>
    <link href="https://dongjiawang.top/2020/09/27/2020-09-27-webView-clickedImage/"/>
    <id>https://dongjiawang.top/2020/09/27/2020-09-27-webView-clickedImage/</id>
    <published>2020-09-27T09:00:00.000Z</published>
    <updated>2020-09-27T02:34:43.628Z</updated>
    
    <content type="html"><![CDATA[<p>点击网页中到图片，获取到这张图片后进行放大展示到效果。</p><p>实现这个效果，首先需要点击图片的时候获取到图片的地址，如果网页中的<code>js</code>没有点击方法，就需要在网页加载完成后通过注入<code>js</code>代码的方式为每个图片增加<code>click</code>方法，并且点击的时候把<code>src</code>地址传递出来。</p><p>需要在<code>webView</code>的两处回调增加代码。</p><p>首先是<code>webViewDidFinishLoad</code> 中注入<code>js</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// img标签添加点击事件，预览图片</span></span><br><span class="line"><span class="built_in">NSString</span> *imageStrings = <span class="string">@"function assignImageClickAction()&#123;var imgs=document.querySelectorAll('img');var length=imgs.length;for(var i=0;i&lt;length;i++)&#123;img=imgs[i];img.onclick=function()&#123;event.stopPropagation();window.location.href='image-preview:'+this.src&#125;&#125;&#125;"</span>;</span><br><span class="line">[webView evaluateJavaScript:imageStrings completionHandler:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p>然后是在<code>shouldStartLoadWithRequest</code>中获取点击方法</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">WKWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">WKNavigationType</span>)navigationType &#123;</span><br><span class="line">    <span class="keyword">if</span> ([request.URL.scheme isEqualToString:<span class="string">@"image-preview"</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSString</span>* path = [request.URL.absoluteString substringFromIndex:[<span class="string">@"image-preview:"</span> length]];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// path 就是获取到的图片的地址，可以通过这个地址拿到图片去用其他的控件进行展示图片</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;点击网页中到图片，获取到这张图片后进行放大展示到效果。&lt;/p&gt;
&lt;p&gt;实现这个效果，首先需要点击图片的时候获取到图片的地址，如果网页中的&lt;code&gt;js&lt;/code&gt;没有点击方法，就需要在网页加载完成后通过注入&lt;code&gt;js&lt;/code&gt;代码的方式为每个图片增加&lt;code
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="webView" scheme="https://dongjiawang.top/source/Tags/webView/"/>
    
  </entry>
  
  <entry>
    <title>WKProcesspool方式共享WKWebView的进程和cookie</title>
    <link href="https://dongjiawang.top/2020/09/26/2020-09-26-wkwebview-cookie/"/>
    <id>https://dongjiawang.top/2020/09/26/2020-09-26-wkwebview-cookie/</id>
    <published>2020-09-26T10:00:00.000Z</published>
    <updated>2020-09-27T02:36:02.031Z</updated>
    
    <content type="html"><![CDATA[<p>以前的时候总结过两次<code>WKWebView</code>的<code>cookie</code>使用方式</p><p><a href="https://dongjiawang.top/2016/08/16/2016-08-16-cookie/">WKWebView添加Cookie</a></p><p><a href="https://dongjiawang.top/2018/07/09/2018-07-09-WKWebView-cookie-add/">WKWebView添加Cookie总结</a></p><p>后来发现还可以使用<code>WKProcesspool</code>的方式共享<code>webView</code>进程池的方式共享<code>cookie</code>。</p><p>把<code>WKProcessPool</code>做成一个单例，需要用到相同<code>cookie</code>的地方都使用这个<code>processPool</code>，当然在清理<code>cookie</code>缓存的时候也要记得清理一下这个<code>processPool</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前的时候总结过两次&lt;code&gt;WKWebView&lt;/code&gt;的&lt;code&gt;cookie&lt;/code&gt;使用方式&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dongjiawang.top/2016/08/16/2016-08-16-cookie/&quot;&gt;WKWebView
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="webView" scheme="https://dongjiawang.top/source/Tags/webView/"/>
    
  </entry>
  
  <entry>
    <title>启动页白屏</title>
    <link href="https://dongjiawang.top/2020/09/26/2020-09-26-launchStoryBoard/"/>
    <id>https://dongjiawang.top/2020/09/26/2020-09-26-launchStoryBoard/</id>
    <published>2020-09-26T09:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.514Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>storyboard</code>作为启动页之后可能会出现加载图片失败的问题，也就是白屏。</p><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p>一般的解决方法是把启动页用的图片从<code>Image.xcassets</code>中移出来，放到项目的根目录下。这种方式可以解决大部分遇到的白屏问题。</p><p>但是还有可能在某些机器在某种情形下出现白屏问题。</p><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><p>在查看沙盒文件的时候，发现在<code>library</code>中有启动页的缓存文件。路径大概如下：</p><blockquote><p>~/Library/SplashBoard/Snapshots</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0.0.3/img/20200926143233.png" alt></p><p>在以<code>bundleid</code>开头的文件夹下面有两张<code>ktx</code>格式的启动页缓存图。可以在<code>app</code>启动后，在子线程开启一次获取这个路径下缓存的图的操作，然后判断图片是否为纯色图，如果是就删除，等下次启动的时候重新生成。</p><p>简单写了些代码逻辑：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> mark ----清理沙盒中的启动页缓存图片----</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// 建议在子线程中调用这个方法</span></span><br><span class="line">- (<span class="keyword">void</span>)cleanSplashBoardCache &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *filePath = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@/Library/SplashBoard/Snapshots"</span>, <span class="built_in">NSHomeDirectory</span>()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">UIImage</span> *image <span class="keyword">in</span> [<span class="keyword">self</span> getSplashBoardImageCache:filePath]) &#123;</span><br><span class="line">        <span class="keyword">if</span> ([<span class="keyword">self</span> judgePureImage:image]) &#123;</span><br><span class="line">            <span class="keyword">if</span> ([[<span class="built_in">NSFileManager</span> defaultManager] fileExistsAtPath:filePath]) &#123;</span><br><span class="line">                <span class="built_in">NSError</span> *error = <span class="literal">nil</span>;</span><br><span class="line">                [[<span class="built_in">NSFileManager</span> defaultManager] removeItemAtPath:filePath error:&amp;error];</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"清除LaunchScreen缓存失败"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"清除LaunchScreen缓存成功"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span> *)getSplashBoardImageCache:(<span class="built_in">NSString</span> *)filePath &#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *array = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="built_in">NSArray</span> *snapshotsArray = [[<span class="built_in">NSFileManager</span> defaultManager] contentsOfDirectoryAtPath:filePath error:<span class="literal">nil</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *bundleID = [[<span class="built_in">NSBundle</span> mainBundle] objectForInfoDictionaryKey:<span class="string">@"CFBundleIdentifier"</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *directoryName <span class="keyword">in</span> snapshotsArray) &#123;</span><br><span class="line">        <span class="comment">// 图片缓存在 bundleid 开头的文件夹中</span></span><br><span class="line">        <span class="keyword">if</span> ([directoryName hasPrefix:bundleID]) &#123;</span><br><span class="line">            filePath = [filePath stringByAppendingFormat:<span class="string">@"/%@"</span>, directoryName];</span><br><span class="line">            <span class="keyword">break</span>;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSArray</span> *imagePathArray = [[<span class="built_in">NSFileManager</span> defaultManager] contentsOfDirectoryAtPath:filePath error:<span class="literal">nil</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *imageName <span class="keyword">in</span> imagePathArray) &#123;</span><br><span class="line">        <span class="built_in">NSString</span> *imagePath = [filePath stringByAppendingFormat:<span class="string">@"/%@"</span>, imageName];</span><br><span class="line">        <span class="comment">// ktx 格式的图片</span></span><br><span class="line">        <span class="keyword">if</span> ([imagePath hasSuffix:<span class="string">@"ktx"</span>]) &#123;</span><br><span class="line">            <span class="built_in">NSData</span> *data = [<span class="built_in">NSData</span> dataWithContentsOfFile:imagePath];</span><br><span class="line">            <span class="keyword">if</span> (data.length) &#123;</span><br><span class="line">                <span class="built_in">UIImage</span> *image = [<span class="built_in">UIImage</span> imageWithData:data];</span><br><span class="line">                [array addObject:image];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)judgePureImage:(<span class="built_in">UIImage</span> *)image &#123;</span><br><span class="line">    <span class="keyword">int</span> bitmapInfo = kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedLast;</span><br><span class="line">    <span class="comment">//第一步：先把图片缩小，加快计算速度，但越小结果误差可能越大</span></span><br><span class="line">    <span class="built_in">CGSize</span> thumbSize = <span class="built_in">CGSizeMake</span>(<span class="number">50</span>,<span class="number">50</span>);</span><br><span class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">CGBitmapContextCreate</span>(<span class="literal">NULL</span>,</span><br><span class="line">                                                thumbSize.width,</span><br><span class="line">                                                thumbSize.height,</span><br><span class="line">                                                <span class="number">8</span>,<span class="comment">//bits per component</span></span><br><span class="line">                                                thumbSize.width*<span class="number">4</span>,</span><br><span class="line">                                                colorSpace,</span><br><span class="line">                                                bitmapInfo);</span><br><span class="line">    <span class="built_in">CGRect</span> drawRect = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, thumbSize.width, thumbSize.height);</span><br><span class="line">    <span class="built_in">CGContextDrawImage</span>(context, drawRect, image.CGImage);</span><br><span class="line">    <span class="built_in">CGColorSpaceRelease</span>(colorSpace);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第二步：取每个点的像素值</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span>* data = <span class="built_in">CGBitmapContextGetData</span> (context);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (data == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> isPureColorImage = <span class="literal">NO</span>;</span><br><span class="line">    <span class="built_in">UIColor</span> *tempColor;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; thumbSize.width; x++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; thumbSize.height; y++) &#123;</span><br><span class="line">            <span class="keyword">int</span> offset = <span class="number">4</span> * (x * y);</span><br><span class="line">            <span class="keyword">int</span> red = data[offset];</span><br><span class="line">            <span class="keyword">int</span> green = data[offset+<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> blue = data[offset+<span class="number">2</span>];</span><br><span class="line">            <span class="comment">// 生成当前像素点到 color</span></span><br><span class="line">            <span class="built_in">UIColor</span> *pixelColor = RGBCOLOR(red, green, blue);</span><br><span class="line">            <span class="comment">// 判断是否有记录上一个的像素颜色</span></span><br><span class="line">            <span class="keyword">if</span> (tempColor) &#123;</span><br><span class="line">                <span class="comment">// 对比两个像素颜色</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">CGColorEqualToColor</span>(pixelColor.CGColor, tempColor.CGColor)) &#123;</span><br><span class="line">                    <span class="comment">// 颜色相同</span></span><br><span class="line">                    isPureColorImage = <span class="literal">YES</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 颜色不同</span></span><br><span class="line">                    isPureColorImage = <span class="literal">NO</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            tempColor = RGBCOLOR(red, green, blue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CGContextRelease</span>(context);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> isPureColorImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是还是会出现白屏的现象，并没有彻底解决这个问题。</p><h4 id="第四种"><a href="#第四种" class="headerlink" title="第四种"></a>第四种</h4><p>重启手机，万能的重启，这种方式需要用户去操作。会清理掉所有的缓存。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 &lt;code&gt;storyboard&lt;/code&gt;作为启动页之后可能会出现加载图片失败的问题，也就是白屏。&lt;/p&gt;
&lt;h4 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; class=&quot;headerlink&quot; title=&quot;第一种&quot;&gt;&lt;/a&gt;第一种&lt;/h4&gt;&lt;p&gt;一般的解
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>录屏功能</title>
    <link href="https://dongjiawang.top/2020/01/19/2020-01-19-screenRecord/"/>
    <id>https://dongjiawang.top/2020/01/19/2020-01-19-screenRecord/</id>
    <published>2020-01-19T09:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.513Z</updated>
    
    <content type="html"><![CDATA[<p>苹果提供了<code>ReplayKit</code>对屏幕进行录制，支持音频、视频，还可以对视频进行剪辑、分享。</p><p>需要引用头文件<code>&lt;ReplayKit/ReplayKit.h&gt;</code>,通过<code>RPScreenRecorder</code>控制录屏。</p><h2 id="RPScreenRecorder"><a href="#RPScreenRecorder" class="headerlink" title="RPScreenRecorder"></a>RPScreenRecorder</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[[RPScreenRecorder sharedRecorder] startRecordingWithHandler:^(<span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line">&#125;];</span><br><span class="line">    </span><br><span class="line">[[RPScreenRecorder sharedRecorder] setMicrophoneEnabled:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure><blockquote><p>开始录制，会请求摄像头和麦克风权限，如果用户拒绝，则无法进行录制。</p><p>录制内容无法直接查看，需要通过<code>RPPreviewViewController</code>才能查看、分享和保存到相册。</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[RPScreenRecorder sharedRecorder] stopRecordingWithHandler:^(RPPreviewViewController * _Nullable previewViewController, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line"> &#125;];</span><br></pre></td></tr></table></figure><p>也可以自己处理数据流：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[RPScreenRecorder sharedRecorder].delegate = <span class="keyword">self</span>;<span class="comment">// 设置代理</span></span><br><span class="line">[RPScreenRecorder sharedRecorder].microphoneEnabled = <span class="literal">YES</span>;<span class="comment">// 麦克风</span></span><br><span class="line">[RPScreenRecorder sharedRecorder].cameraEnabled = <span class="literal">YES</span>; <span class="comment">// 摄像头</span></span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[[RPScreenRecorder sharedRecorder] startCaptureWithHandler:^(<span class="built_in">CMSampleBufferRef</span>  _Nonnull sampleBuffer, RPSampleBufferType bufferType, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        previewViewController.previewControllerDelegate = <span class="keyword">self</span>;</span><br><span class="line">&#125; completionHandler:^(<span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 接收到的 buffer类型，可以使用 AVAssetWriter  进行数据写入</span></span><br><span class="line"><span class="comment">API_AVAILABLE(ios(10.0),tvos(10.0))</span></span><br><span class="line"><span class="comment">typedef NS_ENUM(NSInteger, RPSampleBufferType) &#123;</span></span><br><span class="line"><span class="comment">    RPSampleBufferTypeVideo = 1,</span></span><br><span class="line"><span class="comment">    RPSampleBufferTypeAudioApp,</span></span><br><span class="line"><span class="comment">    RPSampleBufferTypeAudioMic,</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>RPScreenRecorderDelegate</strong></p><p>停止的时候也可以通过代理方法使用 <code>RPPreviewViewController</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)screenRecorder:(RPScreenRecorder *)screenRecorder didStopRecordingWithError:(<span class="built_in">NSError</span> *)error previewViewController:(<span class="keyword">nullable</span> RPPreviewViewController *)previewViewController API_DEPRECATED(<span class="string">"No longer supported"</span>, ios(<span class="number">9.0</span>, <span class="number">10.0</span>), tvos(<span class="number">10.0</span>,<span class="number">10.0</span>));</span><br><span class="line">- (<span class="keyword">void</span>)screenRecorder:(RPScreenRecorder *)screenRecorder didStopRecordingWithPreviewViewController:(<span class="keyword">nullable</span> RPPreviewViewController *)previewViewController error:(<span class="keyword">nullable</span> <span class="built_in">NSError</span> *)error API_AVAILABLE(ios(<span class="number">11.0</span>), tvos(<span class="number">11.0</span>));</span><br></pre></td></tr></table></figure><p>需要设置 <code>RPPreviewViewController</code>的代理。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">previewViewController.previewControllerDelegate = <span class="keyword">self</span>;</span><br></pre></td></tr></table></figure><p><strong>RPPreviewViewController</strong></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)previewController:(RPPreviewViewController *)previewController didFinishWithActivityTypes:(<span class="built_in">NSSet</span>&lt;<span class="built_in">NSString</span> *&gt; *)activityTypes &#123;</span><br><span class="line">    <span class="keyword">if</span> ([activityTypes containsObject: <span class="built_in">UIActivityTypeSaveToCameraRoll</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"保存到相册"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据activityType 判断选择的操作</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToFacebook     API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToTwitter      API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToWeibo        API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;    // SinaWeibo</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeMessage            API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeMail               API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePrint              API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeCopyToPasteboard   API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeAssignToContact    API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeSaveToCameraRoll   API_AVAILABLE(ios(6.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeAddToReadingList   API_AVAILABLE(ios(7.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToFlickr       API_AVAILABLE(ios(7.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToVimeo        API_AVAILABLE(ios(7.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypePostToTencentWeibo API_AVAILABLE(ios(7.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeAirDrop            API_AVAILABLE(ios(7.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeOpenInIBooks       API_AVAILABLE(ios(9.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">UIKIT_EXTERN UIActivityType const UIActivityTypeMarkupAsPDF        API_AVAILABLE(ios(11.0)) __TVOS_PROHIBITED;</span></span><br><span class="line"><span class="comment">*</span></span><br></pre></td></tr></table></figure><h2 id="extension方式录制视频"><a href="#extension方式录制视频" class="headerlink" title="extension方式录制视频"></a>extension方式录制视频</h2><p>通过Xcode的<code>file -&gt; new -&gt; target</code>创建<code>extension</code></p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20200119152644.png" alt></p><p>如果录屏或直播屏幕前需要用户输入一些内容或其他操作，需要同时添加 <code>UI Extension</code></p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20200119153225.png" alt></p><p>创建完成后就出现<code>Extension</code>的代码</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20200119154545.png" alt></p><p>具体的录制功能在<code>SampleHandler</code>中实现,由于iOS沙盒机制的存在，<code>extension</code>的数据并不能直接被App使用，可以使用<code>AppGroup</code>进行数据共享。从而将录制的视频保存到App中。</p><p><strong>RPSystemBroadcastPickerView 按钮</strong></p><p>需要通过<code>replaykit</code>提供的<code>RPSystemBroadcastPickerView</code> 启动录屏，把<code>RPSystemBroadcastPickerView</code>放到需要的view上，通过点击调起<code>Extension</code>。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RPSystemBroadcastPickerView *broadcastPickerView = [[RPSystemBroadcastPickerView alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>)];</span><br><span class="line">broadcastPickerView.preferredExtension = kBroadcastExtensionBundleId;  <span class="comment">// extension的id</span></span><br><span class="line">[<span class="keyword">self</span>.view addSubview:broadcastPickerView];</span><br><span class="line">broadcastPickerView.center = <span class="keyword">self</span>.view.center;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20200119163751.jpeg" alt></p><p><strong><code>SampleHandler</code>中的视频写入操作</strong></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">AVAssetWriter</span> *assetWriter;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">AVAssetWriterInput</span> *assetWriterInput;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">AVAssetWriterInput</span> *assetAudioInput;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *videoOutPath; <span class="comment">// 当前沙盒保存视频的路径</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">BOOL</span>  isFirstSample; <span class="comment">// 是否第一帧数据</span></span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)broadcastStartedWithSetupInfo:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="built_in">NSObject</span> *&gt; *)setupInfo &#123;</span><br><span class="line"><span class="comment">// 视频开始录制时调用</span></span><br><span class="line">  <span class="comment">// info中可以是从 UI 中传递过来的参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 定义 AVAssetWriter</span></span><br><span class="line"><span class="built_in">NSNumber</span> *width= [<span class="built_in">NSNumber</span> numberWithFloat:[[<span class="built_in">UIScreen</span> mainScreen] bounds].size.width];</span><br><span class="line"><span class="built_in">NSNumber</span> *height = [<span class="built_in">NSNumber</span> numberWithFloat:[[<span class="built_in">UIScreen</span> mainScreen] bounds].size.height];</span><br><span class="line"><span class="comment">// 视频参数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *compressionProperties =</span><br><span class="line">    @&#123;<span class="built_in">AVVideoProfileLevelKey</span>         : <span class="built_in">AVVideoProfileLevelH264HighAutoLevel</span>,</span><br><span class="line">      <span class="built_in">AVVideoH264EntropyModeKey</span>      : <span class="built_in">AVVideoH264EntropyModeCABAC</span>,</span><br><span class="line">      <span class="built_in">AVVideoAverageBitRateKey</span>       : @(<span class="number">1920</span> * <span class="number">1080</span> * <span class="number">11.4</span>),</span><br><span class="line">      <span class="built_in">AVVideoMaxKeyFrameIntervalKey</span>  : @<span class="number">30</span>,</span><br><span class="line">      <span class="built_in">AVVideoAllowFrameReorderingKey</span> : @NO&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *videoSettings =</span><br><span class="line">    @&#123;</span><br><span class="line">        <span class="built_in">AVVideoCompressionPropertiesKey</span> : compressionProperties,</span><br><span class="line">        <span class="built_in">AVVideoCodecKey</span>                 : <span class="built_in">AVVideoCodecTypeH264</span>,</span><br><span class="line">        <span class="built_in">AVVideoWidthKey</span>                 : @(width),</span><br><span class="line">        <span class="built_in">AVVideoHeightKey</span>                : @(height)</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="comment">// 音频参数</span></span><br><span class="line">AudioChannelLayout acl;</span><br><span class="line">    bzero( &amp;acl, <span class="keyword">sizeof</span>(acl));</span><br><span class="line">    acl.mChannelLayoutTag = kAudioChannelLayoutTag_Mono;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *audioOutputSettings = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                                         [<span class="built_in">NSNumber</span> numberWithInt: kAudioFormatMPEG4AAC ], <span class="built_in">AVFormatIDKey</span>,</span><br><span class="line">                                         [<span class="built_in">NSNumber</span> numberWithInt: <span class="number">1</span> ], <span class="built_in">AVNumberOfChannelsKey</span>,</span><br><span class="line">                                         [<span class="built_in">NSNumber</span> numberWithFloat: <span class="number">44100.0</span> ], <span class="built_in">AVSampleRateKey</span>,</span><br><span class="line">                                         [<span class="built_in">NSNumber</span> numberWithInt: <span class="number">64000</span> ], <span class="built_in">AVEncoderBitRateKey</span>,</span><br><span class="line">                                         [<span class="built_in">NSData</span> dataWithBytes: &amp;acl length: <span class="keyword">sizeof</span>( acl ) ], <span class="built_in">AVChannelLayoutKey</span>,</span><br><span class="line">                                         <span class="literal">nil</span>];</span><br><span class="line"><span class="comment">// 定义 writer</span></span><br><span class="line"><span class="keyword">self</span>.assetWriterInput = [<span class="built_in">AVAssetWriterInput</span> assetWriterInputWithMediaType:<span class="built_in">AVMediaTypeVideo</span> outputSettings:videoSettings];</span><br><span class="line"><span class="keyword">self</span>.assetWriterInput.expectsMediaDataInRealTime = <span class="literal">YES</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.assetAudioInput = [<span class="built_in">AVAssetWriterInput</span> assetWriterInputWithMediaType:<span class="built_in">AVMediaTypeAudio</span> outputSettings:audioOutputSettings];</span><br><span class="line"><span class="keyword">self</span>.assetAudioInput.expectsMediaDataInRealTime = <span class="literal">YES</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.assetWriter = [<span class="built_in">AVAssetWriter</span> assetWriterWithURL:[<span class="built_in">NSURL</span> fileURLWithPath:<span class="keyword">self</span>.videoOutPath] fileType:<span class="built_in">AVFileTypeMPEG4</span> error:<span class="literal">nil</span>];    </span><br><span class="line">[<span class="keyword">self</span>.assetWriter addInput:<span class="keyword">self</span>.assetWriterInput];    </span><br><span class="line">[<span class="keyword">self</span>.assetWriter addInput:<span class="keyword">self</span>.assetAudioInput];</span><br><span class="line">[<span class="keyword">self</span>.assetWriter setMovieTimeScale:<span class="number">60</span>];</span><br><span class="line"><span class="comment">//开始写入视频</span></span><br><span class="line">[<span class="keyword">self</span>.assetWriter startWriting];</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 暂停和继续录屏</span></span><br><span class="line">- (<span class="keyword">void</span>)broadcastPaused &#123;</span><br><span class="line">    <span class="comment">// User has requested to pause the broadcast. Samples will stop being delivered.</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)broadcastResumed &#123;</span><br><span class="line">    <span class="comment">// User has requested to resume the broadcast. Samples delivery will resume.</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 收到录屏的 buffer</span></span><br><span class="line">- (<span class="keyword">void</span>)processSampleBuffer:(<span class="built_in">CMSampleBufferRef</span>)sampleBuffer withType:(RPSampleBufferType)sampleBufferType &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (sampleBufferType) &#123;</span><br><span class="line">        <span class="keyword">case</span> RPSampleBufferTypeVideo:</span><br><span class="line">            <span class="comment">// Handle video sample buffer for app audio</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// 如果是第一帧数据，判断数据类型，如果不是 video，则废弃，否则会出现视频开头是黑屏</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.isFirstSample) &#123;</span><br><span class="line">                </span><br><span class="line">                [<span class="keyword">self</span>.assetWriter startSessionAtSourceTime:<span class="built_in">CMSampleBufferGetPresentationTimeStamp</span>(sampleBuffer)];</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.isFirstSample = <span class="literal">NO</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">CMSampleBufferIsValid</span>(sampleBuffer) &amp;&amp; <span class="keyword">self</span>.assetWriterInput.readyForMoreMediaData) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.assetWriterInput appendSampleBuffer:sampleBuffer];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RPSampleBufferTypeAudioApp:</span><br><span class="line">            <span class="comment">// Handle audio sample buffer for app audio</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RPSampleBufferTypeAudioMic:</span><br><span class="line">            <span class="comment">// Handle audio sample buffer for mic audio</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">CMSampleBufferIsValid</span>(sampleBuffer) &amp;&amp; <span class="keyword">self</span>.assetAudioInput.readyForMoreMediaData) &#123;</span><br><span class="line">                [<span class="keyword">self</span>.assetAudioInput appendSampleBuffer:sampleBuffer];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 完成录屏</span></span><br><span class="line">- (<span class="keyword">void</span>)broadcastFinished &#123;</span><br><span class="line">    <span class="comment">// User has requested to finish the broadcast.</span></span><br><span class="line">    <span class="comment">// 定义一个标志，标记 assetWriter 是否完成了写入</span></span><br><span class="line">  <span class="comment">// 也可以使用 dispatchgroup</span></span><br><span class="line">    __block <span class="built_in">BOOL</span> finish = <span class="literal">NO</span>;    </span><br><span class="line">    [<span class="keyword">self</span>.assetWriterInput markAsFinished];</span><br><span class="line">    [<span class="keyword">self</span>.assetAudioInput markAsFinished];</span><br><span class="line">    [<span class="keyword">self</span>.assetWriter finishWritingWithCompletionHandler:^&#123;</span><br><span class="line">        <span class="keyword">self</span>.assetWriterInput = <span class="literal">nil</span>;</span><br><span class="line">        <span class="keyword">self</span>.assetAudioInput = <span class="literal">nil</span>;</span><br><span class="line">        <span class="keyword">self</span>.assetWriter = <span class="literal">nil</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// [self moveVideo]; // 把视频数据保存到appgroup共享</span></span><br><span class="line">        <span class="comment">// [self sendLocalNotification]; // 发送 一个本地通知</span></span><br><span class="line">        </span><br><span class="line">        finish = <span class="literal">YES</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (finish == <span class="literal">NO</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>AppGroup共享数据</strong></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)moveVideo &#123;</span><br><span class="line">    <span class="built_in">NSURL</span> *groupURL = [[<span class="built_in">NSFileManager</span> defaultManager] containerURLForSecurityApplicationGroupIdentifier:<span class="string">@"定义的 appgroup 的 id"</span>];</span><br><span class="line">    <span class="built_in">NSURL</span> *fileURL = [groupURL URLByAppendingPathComponent:<span class="string">@"record.mp4"</span>];</span><br><span class="line">    [[<span class="built_in">NSFileManager</span> defaultManager] removeItemAtURL:fileURL error:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSFileManager</span> defaultManager] moveItemAtPath:<span class="keyword">self</span>.videoOutPath toPath:[fileURL path] error:<span class="literal">nil</span>];    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通过通知回调到app</strong></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  identifier 是通知到id，在app的代码中，正常监听这个id 的通知就行</span></span><br><span class="line">- (<span class="keyword">void</span>)sendNotificationForMessageWithIdentifier:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)identifier userInfo:(<span class="built_in">NSDictionary</span> *)info &#123;</span><br><span class="line">    <span class="built_in">CFNotificationCenterRef</span> <span class="keyword">const</span> center = <span class="built_in">CFNotificationCenterGetDarwinNotifyCenter</span>();</span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> userInfo = (__bridge <span class="built_in">CFDictionaryRef</span>)info;</span><br><span class="line">    <span class="built_in">BOOL</span> <span class="keyword">const</span> deliverImmediately = <span class="literal">YES</span>;</span><br><span class="line">    <span class="built_in">CFStringRef</span> identifierRef = (__bridge <span class="built_in">CFStringRef</span>)identifier;</span><br><span class="line">    <span class="built_in">CFNotificationCenterPostNotification</span>(center, identifierRef, <span class="literal">NULL</span>, userInfo, deliverImmediately);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接收录制完成的通知</strong></p><p>定义<code>CFNotification</code>回调</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> NotificationCallback(<span class="built_in">CFNotificationCenterRef</span> center,</span><br><span class="line">                                <span class="keyword">void</span> * observer,</span><br><span class="line">                                <span class="built_in">CFStringRef</span> name,</span><br><span class="line">                                <span class="keyword">void</span> <span class="keyword">const</span> * object,</span><br><span class="line">                                <span class="built_in">CFDictionaryRef</span> userInfo) &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *identifier = (__bridge <span class="built_in">NSString</span> *)name;</span><br><span class="line">    <span class="built_in">NSObject</span> *sender = (__bridge <span class="built_in">NSObject</span> *)observer;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSDictionary</span> *notionUserInfo = @&#123;<span class="string">@"identifier"</span>:identifier&#125;;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:<span class="string">@"ScreenNotificationName"</span></span><br><span class="line">                                                        object:sender</span><br><span class="line">                                                      userInfo:notionUserInfo];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册通知监听</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CFNotificationCenterRef</span> <span class="keyword">const</span> center = <span class="built_in">CFNotificationCenterGetDarwinNotifyCenter</span>();</span><br><span class="line">    <span class="built_in">CFStringRef</span> str = (__bridge <span class="built_in">CFStringRef</span>)identifier;</span><br><span class="line">    <span class="built_in">CFNotificationCenterAddObserver</span>(center,</span><br><span class="line">                                    (__bridge <span class="keyword">const</span> <span class="keyword">void</span> *)(<span class="keyword">self</span>),</span><br><span class="line">                                    NotificationCallback,</span><br><span class="line">                                    str,</span><br><span class="line">                                    <span class="literal">NULL</span>,</span><br><span class="line">                                    <span class="built_in">CFNotificationSuspensionBehaviorDeliverImmediately</span>);</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(broadcastInfo:) name:<span class="string">@"ScreenNotificationName"</span> object:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p>收到通知后</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)broadcastInfo:(<span class="built_in">NSNotification</span> *)notion &#123;</span><br><span class="line">    <span class="built_in">NSDictionary</span> *userInfo = notion.userInfo;</span><br><span class="line">    <span class="built_in">NSString</span> *identifier = userInfo[<span class="string">@"identifier"</span>];</span><br><span class="line">  <span class="comment">// 从 appgroup 中获取保存的视频地址</span></span><br><span class="line">    <span class="built_in">NSURL</span> *groupURL = [[<span class="built_in">NSFileManager</span> defaultManager] containerURLForSecurityApplicationGroupIdentifier:appGroupId];</span><br><span class="line">    <span class="built_in">NSURL</span> *fileURL = [groupURL URLByAppendingPathComponent:<span class="string">@"record.mp4"</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><blockquote><p>系统提供录制进程的内存空间约为50M，超过50M进程将会被停止</p><p>采集到数据结构中的yuv的缓存空间，不能占用</p><p>使用 AppDelegate 的代理判断是否锁屏</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;苹果提供了&lt;code&gt;ReplayKit&lt;/code&gt;对屏幕进行录制，支持音频、视频，还可以对视频进行剪辑、分享。&lt;/p&gt;
&lt;p&gt;需要引用头文件&lt;code&gt;&amp;lt;ReplayKit/ReplayKit.h&amp;gt;&lt;/code&gt;,通过&lt;code&gt;RPScreenRecord
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>检测设备方向</title>
    <link href="https://dongjiawang.top/2020/01/17/2020-01-17-%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%96%B9%E5%90%91/"/>
    <id>https://dongjiawang.top/2020/01/17/2020-01-17-检测设备方向/</id>
    <published>2020-01-17T10:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>使用<code>[UIApplication sharedApplication].statusBarOrientation</code>获取</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIInterfaceOrientation</span> orientation = [<span class="built_in">UIApplication</span> sharedApplication].statusBarOrientation;</span><br></pre></td></tr></table></figure><p>枚举结果：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Note that UIInterfaceOrientationLandscapeLeft is equal to UIDeviceOrientationLandscapeRight (and vice versa).</span></span><br><span class="line"><span class="comment">// This is because rotating the device to the left requires rotating the content to the right.</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIInterfaceOrientation</span>) &#123;</span><br><span class="line">    <span class="built_in">UIInterfaceOrientationUnknown</span>            = <span class="built_in">UIDeviceOrientationUnknown</span>,</span><br><span class="line">    <span class="built_in">UIInterfaceOrientationPortrait</span>           = <span class="built_in">UIDeviceOrientationPortrait</span>,</span><br><span class="line">    <span class="built_in">UIInterfaceOrientationPortraitUpsideDown</span> = <span class="built_in">UIDeviceOrientationPortraitUpsideDown</span>,</span><br><span class="line">    <span class="built_in">UIInterfaceOrientationLandscapeLeft</span>      = <span class="built_in">UIDeviceOrientationLandscapeRight</span>,</span><br><span class="line">    <span class="built_in">UIInterfaceOrientationLandscapeRight</span>     = <span class="built_in">UIDeviceOrientationLandscapeLeft</span></span><br><span class="line">&#125; API_UNAVAILABLE(tvos);</span><br></pre></td></tr></table></figure><p>但是这种方式必须要项目支持横竖屏方向切换。</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20200117174017.png" alt></p><p>同时控制器中要实现下面的方法：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//是否自动旋转,返回YES可以自动旋转  </span></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldAutorotate <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) __TVOS_PROHIBITED;  </span><br><span class="line"><span class="comment">//返回支持的方向  </span></span><br><span class="line">- (<span class="built_in">UIInterfaceOrientationMask</span>)supportedInterfaceOrientations <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) __TVOS_PROHIBITED;  </span><br><span class="line"><span class="comment">//这个是返回优先方向  </span></span><br><span class="line">- (<span class="built_in">UIInterfaceOrientation</span>)preferredInterfaceOrientationForPresentation <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) __TVOS_PROHIBITED;</span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>使用陀螺仪<code>CoreMotion</code>监听和获取设备的方向</p><p>添加引用： <code>#import &lt;CoreMotion/CoreMotion.h&gt;</code></p><p>定义一个<code>Manager</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">CMMotionManager</span> *cmmotionManager;</span><br></pre></td></tr></table></figure><p>开始监听：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过陀螺仪计算摄像头的方向，这个方法是在做自定义拍照的时候，阶段设备的方向调整图片使用，根据自己的需要调整使用</span></span><br><span class="line"><span class="keyword">self</span>.cmmotionManager = [[<span class="built_in">CMMotionManager</span> alloc] init];</span><br><span class="line">[<span class="keyword">self</span>.cmmotionManager startAccelerometerUpdatesToQueue:[<span class="built_in">NSOperationQueue</span> currentQueue] withHandler:^(<span class="built_in">CMAccelerometerData</span> * _Nullable accelerometerData, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        <span class="built_in">AVCaptureVideoOrientation</span> orientation = <span class="built_in">AVCaptureVideoOrientationPortrait</span>;</span><br><span class="line">        <span class="keyword">if</span> (accelerometerData.acceleration.x &gt;= <span class="number">0.75</span>) &#123;</span><br><span class="line">            orientation = <span class="built_in">AVCaptureVideoOrientationLandscapeRight</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (accelerometerData.acceleration.x &lt;= <span class="number">-0.75</span>) &#123;</span><br><span class="line">            orientation = <span class="built_in">AVCaptureVideoOrientationLandscapeLeft</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (accelerometerData.acceleration.y &lt;= <span class="number">-0.75</span>) &#123;</span><br><span class="line">            orientation = <span class="built_in">AVCaptureVideoOrientationPortrait</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (accelerometerData.acceleration.y &gt;= <span class="number">0.75</span>) &#123;</span><br><span class="line">            orientation = <span class="built_in">AVCaptureVideoOrientationPortraitUpsideDown</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure><blockquote><p>实际到项目中还可以自定义更新监听方向的时间间隔等等，具体的设置属性，苹果的文档写的很详细，也没多少内容，可以自己研究一下。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; class=&quot;headerlink&quot; title=&quot;第一种&quot;&gt;&lt;/a&gt;第一种&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;[UIApplication sharedApplication].statusBarOrientation&lt;/co
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>UIVideoEditorController的颜色</title>
    <link href="https://dongjiawang.top/2019/12/09/2019-12-09-UIVideoEditorController%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
    <id>https://dongjiawang.top/2019/12/09/2019-12-09-UIVideoEditorController的颜色/</id>
    <published>2019-12-09T04:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.512Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客介绍了<a href="https://dongjiawang.top/2019/12/06/2019-12-06-UIVideoEditorController/">UIVideoEditorController</a>的简单使用，但是系统的的颜色都是白色高斯模糊，放到一些APP的主题颜色中并不好看，所以需要修改一下控制器的导航栏和toolbar的颜色。</p><p>创建一个继承<code>UIVideoEditorController</code>的控制器，然后修改这个控制器的导航栏颜色，遍历控制器的<code>view</code>的<code>subviews</code>，找到<code>toolbar</code>，修改<code>toolbar</code>的属性。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.navigationBar.translucent = <span class="literal">NO</span>;</span><br><span class="line">    <span class="keyword">self</span>.navigationBar.barTintColor = [<span class="built_in">UIColor</span> appThemeColor];</span><br><span class="line">    <span class="keyword">self</span>.navigationBar.tintColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    <span class="keyword">self</span>.navigationBar.titleTextAttributes = @&#123;<span class="built_in">NSForegroundColorAttributeName</span> : [<span class="built_in">UIColor</span> whiteColor]&#125;;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> changeBottomToolBarColor:<span class="keyword">self</span>.view];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)changeBottomToolBarColor:(<span class="built_in">UIView</span> *)view &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span> *subView <span class="keyword">in</span> view.subviews) &#123;</span><br><span class="line">        <span class="keyword">if</span> ([<span class="built_in">NSStringFromClass</span>([subView <span class="keyword">class</span>]) isEqualToString:<span class="string">@"UIToolbar"</span>]) &#123;</span><br><span class="line">            <span class="built_in">UIToolbar</span> *toolbar = (<span class="built_in">UIToolbar</span> *)subView;</span><br><span class="line">            toolbar.barTintColor = [<span class="built_in">UIColor</span> appThemeColor];</span><br><span class="line">            toolbar.tintColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="keyword">self</span> changeBottomToolBarColor:subView];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下图</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/IMG_C145ED458A94-1.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇博客介绍了&lt;a href=&quot;https://dongjiawang.top/2019/12/06/2019-12-06-UIVideoEditorController/&quot;&gt;UIVideoEditorController&lt;/a&gt;的简单使用，但是系统的的颜色都是白色高斯模糊
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>UIVideoEditorController</title>
    <link href="https://dongjiawang.top/2019/12/06/2019-12-06-UIVideoEditorController/"/>
    <id>https://dongjiawang.top/2019/12/06/2019-12-06-UIVideoEditorController/</id>
    <published>2019-12-06T04:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.512Z</updated>
    
    <content type="html"><![CDATA[<p>在使用<code>UIImagePickerController</code>拍摄视频的时候如果设置<code>allowsEditing</code>为<code>YES</code>，在拍摄完成后可以对视频进行裁剪。</p><p>如果需要裁剪相册中的视频，可以直接使用系统提供的<code>UIVideoEditorController</code>。</p><p>在使用的时候可以先调用这个类方法判断视频是否可以裁剪</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)canEditVideoAtPath:(<span class="built_in">NSString</span> *)videoPath;</span><br></pre></td></tr></table></figure><p><code>UIVideoEditorController</code>提供下面三个属性</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 视频文件的路径</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>)     <span class="built_in">NSString</span>                              *videoPath;</span><br><span class="line"><span class="comment">// 裁剪出视频的时长，默认10分钟</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)           <span class="built_in">NSTimeInterval</span>                        videoMaximumDuration; <span class="comment">// default value is 10 minutes. set to 0 to specify no maximum duration.</span></span><br><span class="line"><span class="comment">// 导出视频的清晰度</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)           <span class="built_in">UIImagePickerControllerQualityType</span>    videoQuality;</span><br></pre></td></tr></table></figure><p><code>UIVideoEditorController</code>的代理回调</p><p>需要引用<code>&lt;UIVideoEditorControllerDelegate, UINavigationControllerDelegate&gt;</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编辑并保存成功</span></span><br><span class="line">- (<span class="keyword">void</span>)videoEditorController:(<span class="built_in">UIVideoEditorController</span> *)editor didSaveEditedVideoToPath:(<span class="built_in">NSString</span> *)editedVideoPath; <span class="comment">// edited video is saved to a path in app's temporary directory</span></span><br><span class="line"><span class="comment">// 编辑失败</span></span><br><span class="line">- (<span class="keyword">void</span>)videoEditorController:(<span class="built_in">UIVideoEditorController</span> *)editor didFailWithError:(<span class="built_in">NSError</span> *)error;</span><br><span class="line"><span class="comment">// 取消编辑</span></span><br><span class="line">- (<span class="keyword">void</span>)videoEditorControllerDidCancel:(<span class="built_in">UIVideoEditorController</span> *)editor;</span><br></pre></td></tr></table></figure><p>效果如下图</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/IMG_1A99528EA3F1-3.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用&lt;code&gt;UIImagePickerController&lt;/code&gt;拍摄视频的时候如果设置&lt;code&gt;allowsEditing&lt;/code&gt;为&lt;code&gt;YES&lt;/code&gt;，在拍摄完成后可以对视频进行裁剪。&lt;/p&gt;
&lt;p&gt;如果需要裁剪相册中的视频，可以直接使用
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Cordova创建plugin</title>
    <link href="https://dongjiawang.top/2019/11/08/2019-11-08-Cordova%E5%88%9B%E5%BB%BAplugin/"/>
    <id>https://dongjiawang.top/2019/11/08/2019-11-08-Cordova创建plugin/</id>
    <published>2019-11-08T04:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.512Z</updated>
    
    <content type="html"><![CDATA[<p>创建<code>plugin</code>需要用到<code>plugman</code>这个工具，可以使用<code>npm</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g plugman</span><br></pre></td></tr></table></figure><h3 id="创建plugin模版"><a href="#创建plugin模版" class="headerlink" title="创建plugin模版"></a>创建plugin模版</h3><p>假设有一个名为<code>CordovaDemo</code>的工程，进入工程根目录，使用<code>plugman</code>创建名为<code>pluginDemo</code>的插件，版本号是 <code>1.0</code>， <code>ID</code>是<code>cordova-plugin-demo</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugman create --name pluginDemo --plugin_id cordova-plugin-demo --plugin_version 1.0</span><br></pre></td></tr></table></figure><p>进入插件目录，配置插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> pluginDemo</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加iOS平台</span></span><br><span class="line">plugman platform add --platform_name ios</span><br><span class="line"><span class="comment">#添加安卓平台</span></span><br><span class="line">plugman platform add --platform_name android</span><br></pre></td></tr></table></figure><h3 id="修改plugin-xml"><a href="#修改plugin-xml" class="headerlink" title="修改plugin.xml"></a>修改plugin.xml</h3><p>刚刚创建的插件的plugin是这样的，下面就只说iOS平台了，安卓类似</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">id</span>=<span class="string">"cordova-plugin-demo"</span> <span class="attr">version</span>=<span class="string">"1.0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://apache.org/cordova/ns/plugins/1.0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>pluginDemo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">js-module</span> <span class="attr">name</span>=<span class="string">"pluginDemo"</span> <span class="attr">src</span>=<span class="string">"www/pluginDemo.js"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">clobbers</span> <span class="attr">target</span>=<span class="string">"cordova.plugins.pluginDemo"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">js-module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"ios"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">config-file</span> <span class="attr">parent</span>=<span class="string">"/*"</span> <span class="attr">target</span>=<span class="string">"config.xml"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">"pluginDemo"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ios-package"</span> <span class="attr">value</span>=<span class="string">"pluginDemo"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">config-file</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 引用的iOS文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source-file</span> <span class="attr">src</span>=<span class="string">"src/ios/pluginDemo.m"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>source-file</code>这里要把自定义的iOS的插件的代码都引用起来，否则会找不到文件(包括头文件)</p><p>例如下图，是我的项目都代码</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/QQ20191108-111239@2x.png" alt></p><p><strong><a href="https://dongjiawang.top/2019/10/30/2019-10-30-Cordova中使用cocoapods管理iOS的第三方库/">Cordova中使用cocoapods管理iOS的第三方库</a></strong></p><p>参考这篇文章，管理iOS的cocoapods库</p><p><strong><a href="https://dongjiawang.top/2018/11/23/2018-11-23-自定义cordova插件/">自定义cordova插件</a></strong></p><p>参考这篇文章，写原生代码</p><p>把原生代码引用到<strong>xml</strong>文件中后，<code>Cordova</code>的<code>js</code>文件就能调用到</p><p>创建<code>package.json</code>文件，用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p><code>package.json</code>的内容就用插件的信息就行</p><h3 id="安装插件到项目"><a href="#安装插件到项目" class="headerlink" title="安装插件到项目"></a>安装插件到项目</h3><p>安装Cordova提供的插件的时候使用的是插件的ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-device</span><br></pre></td></tr></table></figure><p>安装自定义的本地插件，就可以使用<code>本地路径</code>安装，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add /Users/admin/Desktop/CordovaDemo/plugins/pluginDemo</span><br></pre></td></tr></table></figure><p>安装成功后，<code>Cordova</code>的<code>plugin</code>目录会自动添加自定义的插件，就可以正常使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建&lt;code&gt;plugin&lt;/code&gt;需要用到&lt;code&gt;plugman&lt;/code&gt;这个工具，可以使用&lt;code&gt;npm&lt;/code&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="Cordova" scheme="https://dongjiawang.top/categories/Cordova/"/>
    
    
  </entry>
  
  <entry>
    <title>Cordova中使用cocoapods管理iOS的第三方库</title>
    <link href="https://dongjiawang.top/2019/10/30/2019-10-30-Cordova%E4%B8%AD%E4%BD%BF%E7%94%A8cocoapods%E7%AE%A1%E7%90%86iOS%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    <id>https://dongjiawang.top/2019/10/30/2019-10-30-Cordova中使用cocoapods管理iOS的第三方库/</id>
    <published>2019-10-30T08:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.511Z</updated>
    
    <content type="html"><![CDATA[<p><code>Cordova</code>已经支持iOS的<code>cocoapods</code>管理第三方库。</p><p>如果自定义的<code>plugin</code>中使用了<code>cocoapods</code>管理的框架，可以在<code>plugin.xml</code>文件中添加<code>pod</code>的引用，在<code>Cordova plugin add</code>的时候，会根据配置文件，同时安装<code>cocoapods</code>中的库，可参考<a href="https://cordova.apache.org/docs/en/9.x/plugin_ref/spec.html#podspec-ios" target="_blank" rel="noopener">Cordova的文档</a>填写配置信息。</p><p>举例如下：</p><p>在<code>plugin.xml</code>文件中的iOS的平台配置中添加下面的<code>pod</code>配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">podspec</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">url</span>=<span class="string">"https://github.com/brightcove/BrightcoveSpecs.git"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">url</span>=<span class="string">"https://github.com/CocoaPods/Specs.git"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pods</span> <span class="attr">use-frameworks</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"AFNetworking"</span> <span class="attr">spec</span>=<span class="string">"~&gt; 3.2"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"SDWebImage"</span> <span class="attr">spec</span>=<span class="string">"~&gt; 4.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"Eureka"</span> <span class="attr">swift-version</span>=<span class="string">"3.3"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"AcknowList"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"Brightcove-Player-Core"</span> <span class="attr">spec</span>=<span class="string">"~&gt; 6.3.4"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"Foobar1"</span> <span class="attr">git</span>=<span class="string">"git@github.com:hoge/foobar1.git"</span> <span class="attr">configurations</span>=<span class="string">"Debug"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"Foobar2"</span> <span class="attr">git</span>=<span class="string">"git@github.com:hoge/foobar2.git"</span> <span class="attr">branch</span>=<span class="string">"next"</span> <span class="attr">configurations</span>=<span class="string">"Debug,Release"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pod</span> <span class="attr">name</span>=<span class="string">"FoobarSwift"</span> <span class="attr">swift-version</span>=<span class="string">"4.1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pods</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">podspec</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安装<code>plugin</code>之后项目工程中的<code>Podfile</code>文件就会添加上面配置中的框架，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DO NOT MODIFY -- auto-generated by Apache Cordova</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">'https://github.com/brightcove/BrightcoveSpecs.git'</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">'https://github.com/CocoaPods/Specs.git'</span></span><br><span class="line">platform :ios, <span class="string">'9.0'</span></span><br><span class="line">use_frameworks!</span><br><span class="line">target <span class="string">'HelloCordova'</span> <span class="keyword">do</span></span><br><span class="line">    project <span class="string">'HelloCordova.xcodeproj'</span></span><br><span class="line">    pod <span class="string">'AFNetworking'</span>, <span class="string">'~&gt; 3.2'</span></span><br><span class="line">    pod <span class="string">'SDWebImage'</span>, <span class="string">'~&gt; 4.0'</span></span><br><span class="line">    pod <span class="string">'Eureka'</span></span><br><span class="line">    pod <span class="string">'AcknowList'</span></span><br><span class="line">    pod <span class="string">'Brightcove-Player-Core'</span>, <span class="string">'~&gt; 6.3.4'</span></span><br><span class="line">    pod <span class="string">'Foobar1'</span>, :git =&gt; <span class="string">'git@github.com:hoge/foobar1.git'</span>, :configurations =&gt; [<span class="string">'Debug'</span>]</span><br><span class="line">    pod <span class="string">'Foobar2'</span>, :branch =&gt; <span class="string">'next'</span>, :git =&gt; <span class="string">'git@github.com:hoge/foobar2.git'</span>, :configurations =&gt; [<span class="string">'Debug'</span>,<span class="string">'Release'</span>]</span><br><span class="line">    pod <span class="string">'FoobarSwift'</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Cordova&lt;/code&gt;已经支持iOS的&lt;code&gt;cocoapods&lt;/code&gt;管理第三方库。&lt;/p&gt;
&lt;p&gt;如果自定义的&lt;code&gt;plugin&lt;/code&gt;中使用了&lt;code&gt;cocoapods&lt;/code&gt;管理的框架，可以在&lt;code&gt;plugin
      
    
    </summary>
    
      <category term="Cordova" scheme="https://dongjiawang.top/categories/Cordova/"/>
    
    
  </entry>
  
  <entry>
    <title>获取到的相册图片方向错误</title>
    <link href="https://dongjiawang.top/2019/10/30/2019-10-30-%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E6%96%B9%E5%90%91%E9%94%99%E8%AF%AF/"/>
    <id>https://dongjiawang.top/2019/10/30/2019-10-30-获取到的相册图片方向错误/</id>
    <published>2019-10-30T07:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.511Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>PhotoKit</code>从相册中获取到的图片时，会出现有些图片直接放在<code>UIImageView</code>中去显示的话，图片是正常的，如果对图片进行编辑，就会发现图片的方向是错误的。</p><p>下面的方法是判断获取到的图片方向，对方向错误的图片进行旋转处理</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIImage</span> *)fixOrientation:(<span class="built_in">UIImage</span> *)resourceImage &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (resourceImage.imageOrientation == <span class="built_in">UIImageOrientationUp</span>)</span><br><span class="line">        <span class="keyword">return</span> resourceImage;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGAffineTransform</span> transform = <span class="built_in">CGAffineTransformIdentity</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (resourceImage.imageOrientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationDown</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationDownMirrored</span>:</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformTranslate</span>(transform, resourceImage.size.width, resourceImage.size.height);</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformRotate</span>(transform, M_PI);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeft</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeftMirrored</span>:</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformTranslate</span>(transform, resourceImage.size.width, <span class="number">0</span>);</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformRotate</span>(transform, M_PI_2);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRight</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRightMirrored</span>:</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformTranslate</span>(transform, <span class="number">0</span>, resourceImage.size.height);</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformRotate</span>(transform, -M_PI_2);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (resourceImage.imageOrientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationUpMirrored</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationDownMirrored</span>:</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformTranslate</span>(transform, resourceImage.size.width, <span class="number">0</span>);</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformScale</span>(transform, <span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeftMirrored</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRightMirrored</span>:</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformTranslate</span>(transform, resourceImage.size.height, <span class="number">0</span>);</span><br><span class="line">            transform = <span class="built_in">CGAffineTransformScale</span>(transform, <span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextRef</span> ctx = <span class="built_in">CGBitmapContextCreate</span>(<span class="literal">NULL</span>, resourceImage.size.width, resourceImage.size.height,</span><br><span class="line">                                             <span class="built_in">CGImageGetBitsPerComponent</span>(resourceImage.CGImage), <span class="number">0</span>,</span><br><span class="line">                                             <span class="built_in">CGImageGetColorSpace</span>(resourceImage.CGImage),</span><br><span class="line">                                             <span class="built_in">CGImageGetBitmapInfo</span>(resourceImage.CGImage));</span><br><span class="line">    <span class="built_in">CGContextConcatCTM</span>(ctx, transform);</span><br><span class="line">    <span class="keyword">switch</span> (resourceImage.imageOrientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeft</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeftMirrored</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRight</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRightMirrored</span>:</span><br><span class="line">            <span class="comment">// Grr...</span></span><br><span class="line">            <span class="built_in">CGContextDrawImage</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">0</span>,<span class="number">0</span>,resourceImage.size.height,resourceImage.size.width), resourceImage.CGImage);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">CGContextDrawImage</span>(ctx, <span class="built_in">CGRectMake</span>(<span class="number">0</span>,<span class="number">0</span>,resourceImage.size.width,resourceImage.size.height), resourceImage.CGImage);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// And now we just create a new UIImage from the drawing context</span></span><br><span class="line">    <span class="built_in">CGImageRef</span> cgImage = <span class="built_in">CGBitmapContextCreateImage</span>(ctx);</span><br><span class="line">    <span class="built_in">UIImage</span> *resultImage = [<span class="built_in">UIImage</span> imageWithCGImage:cgImage];</span><br><span class="line">    <span class="built_in">CGContextRelease</span>(ctx);</span><br><span class="line">    <span class="built_in">CGImageRelease</span>(cgImage);</span><br><span class="line">    <span class="keyword">return</span> resultImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用&lt;code&gt;PhotoKit&lt;/code&gt;从相册中获取到的图片时，会出现有些图片直接放在&lt;code&gt;UIImageView&lt;/code&gt;中去显示的话，图片是正常的，如果对图片进行编辑，就会发现图片的方向是错误的。&lt;/p&gt;
&lt;p&gt;下面的方法是判断获取到的图片方向，对方向错
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>合成视频出现绿边</title>
    <link href="https://dongjiawang.top/2019/09/19/2019-09-19-%E5%90%88%E6%88%90%E8%A7%86%E9%A2%91%E5%87%BA%E7%8E%B0%E7%BB%BF%E8%BE%B9/"/>
    <id>https://dongjiawang.top/2019/09/19/2019-09-19-合成视频出现绿边/</id>
    <published>2019-09-19T15:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.511Z</updated>
    
    <content type="html"><![CDATA[<p>iOS项目中涉及到了多张图片合成视频，合成出来的视频出现了绿边，这里就涉及到了视频尺寸的知识点。</p><p>一般的编/解码器都有16位对齐的处理，不足<strong>16</strong>的整数倍的地方会以绿边的形式填充。</p><p>所以在合成视频的时候要注意设置视频的尺寸<strong>必须是16的整数倍</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;iOS项目中涉及到了多张图片合成视频，合成出来的视频出现了绿边，这里就涉及到了视频尺寸的知识点。&lt;/p&gt;
&lt;p&gt;一般的编/解码器都有16位对齐的处理，不足&lt;strong&gt;16&lt;/strong&gt;的整数倍的地方会以绿边的形式填充。&lt;/p&gt;
&lt;p&gt;所以在合成视频的时候要注意设置视
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>配置fastlane环境</title>
    <link href="https://dongjiawang.top/2019/09/10/2019-09-10-%E9%85%8D%E7%BD%AEfastlane%E7%8E%AF%E5%A2%83/"/>
    <id>https://dongjiawang.top/2019/09/10/2019-09-10-配置fastlane环境/</id>
    <published>2019-09-10T03:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.510Z</updated>
    
    <content type="html"><![CDATA[<p>配合这篇文章使用<a href="https://dongjiawang.top/2017/09/13/2017-09-13-fastlane/">Fastlane自动化发布</a></p><h2 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew,"></a>安装<code>homebrew</code>,</h2><p> <a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener"><strong>链接</strong></a>。</p><h2 id="安装Ruby"><a href="#安装Ruby" class="headerlink" title="安装Ruby"></a>安装Ruby</h2><h3 id="安装rvm："><a href="#安装rvm：" class="headerlink" title="安装rvm："></a>安装rvm：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://get.rvm.io | bash -s stable</span><br><span class="line">$ <span class="built_in">source</span> ~/.rvm/scripts/rvm     <span class="comment"># 命令终端load</span></span><br><span class="line">$ rvm -v    <span class="comment"># 测试rvm是否安装成功</span></span><br><span class="line">$ gem update --system <span class="comment"># 更新</span></span><br></pre></td></tr></table></figure><h3 id="安装Ruby："><a href="#安装Ruby：" class="headerlink" title="安装Ruby："></a>安装Ruby：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list known        <span class="comment"># 查看可用ruby版本</span></span><br><span class="line">$ rvm install 2.4.1     <span class="comment"># 安装ruby，这里根据实际情况写 版本号</span></span><br><span class="line">$ rvm 2.4.1 —default    <span class="comment"># 设置ruby版本，设置安装的版本为默认版本</span></span><br><span class="line">$ rvm list              <span class="comment"># 查看当前安装的ruby</span></span><br><span class="line">$ ruby -v</span><br></pre></td></tr></table></figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功:"></a>检查是否安装成功:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem -v</span><br></pre></td></tr></table></figure><h3 id="更换ruby源为国内镜像："><a href="#更换ruby源为国内镜像：" class="headerlink" title="更换ruby源为国内镜像："></a>更换ruby源为国内镜像：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ gem sources --remove https://rubygems.org/ </span><br><span class="line">$ gem sources --add https://gems.ruby-china.com/</span><br><span class="line">$ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ </span><br><span class="line">$ gem sources -l <span class="comment">#(查看当前ruby的源)</span></span><br></pre></td></tr></table></figure><h2 id="安装fastlane"><a href="#安装fastlane" class="headerlink" title="安装fastlane"></a>安装fastlane</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install fastlane</span><br></pre></td></tr></table></figure><h3 id="安装fastlane插件"><a href="#安装fastlane插件" class="headerlink" title="安装fastlane插件"></a>安装fastlane插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane add_plugin versioning</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane add_plugin firim</span><br></pre></td></tr></table></figure><h2 id="firim的token"><a href="#firim的token" class="headerlink" title="firim的token"></a>firim的token</h2><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/image-20190910104650219.png" alt></p><h2 id="更改fastlane配置"><a href="#更改fastlane配置" class="headerlink" title="更改fastlane配置"></a>更改fastlane配置</h2><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/image-20190910105153178.png" alt></p><blockquote><p> 替换<code>ipa</code>包的输出路径</p></blockquote><blockquote><p>替换<code>token</code>为自己的<code>firim</code>的<code>token</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配合这篇文章使用&lt;a href=&quot;https://dongjiawang.top/2017/09/13/2017-09-13-fastlane/&quot;&gt;Fastlane自动化发布&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装homebrew&quot;&gt;&lt;a href=&quot;#安装homebrew&quot;
      
    
    </summary>
    
      <category term="工具" scheme="https://dongjiawang.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter的BottomNavigationBar不显示的问题</title>
    <link href="https://dongjiawang.top/2019/08/07/2019-08-07-Flutter%E7%9A%84BottomNavigationBar%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://dongjiawang.top/2019/08/07/2019-08-07-Flutter的BottomNavigationBar不显示的问题/</id>
    <published>2019-08-07T06:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.510Z</updated>
    
    <content type="html"><![CDATA[<p>在学习Flutter开发的时候发现当设置<code>BottomNavigationBar</code>的数量超过3个后，底部的导航是白色，不仔细观察的话跟没有显示出来一样。</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/WX20190807-135637@2x.png" alt></p><p>官方文档的说明是：</p><blockquote><p>BottomNavigationBarType.shifting, the default when there are four or more items. All items are rendered in white and the navigation bar’s<br>background color is the same as the<br>BottomNavigationBarItem.backgroundColor of the selected item. In this<br>case it’s assumed that each item will have a different background<br>color and that background color will contrast well with white.</p></blockquote><p>有道翻译：</p><blockquote><p>BottomNavigationBarType。移位，当有四个或多个项时的默认值。所有项目都呈现为白色和导航栏的<br>背景颜色与。相同<br>BottomNavigationBarItem。所选项目的背景颜色。在这个<br>假设每个项目都有不同的背景<br>颜色和背景颜色会与白色形成很好的对比。</p></blockquote><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>给 <code>BottomNavigationBar</code>添加<code>type</code>属性。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type:BottomNavigationBarType.fixed,</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/WX20190807-135702@2x.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在学习Flutter开发的时候发现当设置&lt;code&gt;BottomNavigationBar&lt;/code&gt;的数量超过3个后，底部的导航是白色，不仔细观察的话跟没有显示出来一样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/dong
      
    
    </summary>
    
      <category term="flutter" scheme="https://dongjiawang.top/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://dongjiawang.top/source/Tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>MJRefresh增加震动反馈</title>
    <link href="https://dongjiawang.top/2019/08/05/2019-08-05-MJRefresh%E5%A2%9E%E5%8A%A0%E9%9C%87%E5%8A%A8%E5%8F%8D%E9%A6%88/"/>
    <id>https://dongjiawang.top/2019/08/05/2019-08-05-MJRefresh增加震动反馈/</id>
    <published>2019-08-05T15:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.509Z</updated>
    
    <content type="html"><![CDATA[<p>发现有的app在下拉刷新的时候有一下震动反馈，感觉用户体验很棒，所以想在现有的项目中也增加一个这样的效果。但是项目中使用的 <a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">MJRefresh</a> 并没有提供这样的接口，自己重新实现下拉刷新也不现实。</p><p>既然如此就需要手动去监听下拉的状态改变。</p><p><code>MJRefresh</code>中刷新控件的基类<code>MJRefreshComponent</code>有一个<code>state</code>属性，是一个枚举：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 刷新控件的状态 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, MJRefreshState) &#123;</span><br><span class="line">    <span class="comment">/** 普通闲置状态 */</span></span><br><span class="line">    MJRefreshStateIdle = <span class="number">1</span>,</span><br><span class="line">    <span class="comment">/** 松开就可以进行刷新的状态 */</span></span><br><span class="line">    MJRefreshStatePulling,</span><br><span class="line">    <span class="comment">/** 正在刷新中的状态 */</span></span><br><span class="line">    MJRefreshStateRefreshing,</span><br><span class="line">    <span class="comment">/** 即将刷新的状态 */</span></span><br><span class="line">    MJRefreshStateWillRefresh,</span><br><span class="line">    <span class="comment">/** 所有数据加载完毕，没有更多的数据了 */</span></span><br><span class="line">    MJRefreshStateNoMoreData</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个就属性就是刷新控件的状态值，可以使用<code>KVO</code>的方式在列表中监听控件状态的变化，从而增加震动反馈。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增加KVO监听</span></span><br><span class="line">[_tableView.mj_header addObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"state"</span> options:<span class="built_in">NSKeyValueObservingOptionNew</span> context:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">[_tableView.mj_footer addObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"state"</span> options:<span class="built_in">NSKeyValueObservingOptionNew</span> context:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p>实现监听方法</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath ofObject:(<span class="keyword">id</span>)object change:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="keyword">id</span>&gt; *)change context:(<span class="keyword">void</span> *)context &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([object isEqual:<span class="keyword">self</span>.tableView.mj_header] &amp;&amp; <span class="keyword">self</span>.tableView.mj_header.state == MJRefreshStatePulling) &#123;</span><br><span class="line">        [<span class="keyword">self</span> feedbackGenerator];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ([object isEqual:<span class="keyword">self</span>.tableView.mj_footer] &amp;&amp; <span class="keyword">self</span>.tableView.mj_footer.state == MJRefreshStatePulling) &#123;</span><br><span class="line">        [<span class="keyword">self</span> feedbackGenerator];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>震动反馈</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)feedbackGenerator &#123;</span><br><span class="line">    <span class="built_in">UIImpactFeedbackGenerator</span> *generator = [[<span class="built_in">UIImpactFeedbackGenerator</span> alloc] initWithStyle:<span class="built_in">UIImpactFeedbackStyleMedium</span>];</span><br><span class="line">    [generator prepare];</span><br><span class="line">    [generator impactOccurred];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;发现有的app在下拉刷新的时候有一下震动反馈，感觉用户体验很棒，所以想在现有的项目中也增加一个这样的效果。但是项目中使用的 &lt;a href=&quot;https://github.com/CoderMJLee/MJRefresh&quot; target=&quot;_blank&quot; rel=&quot;noop
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>导入Xcode文件排序错乱的问题</title>
    <link href="https://dongjiawang.top/2019/07/02/2019-07-02-%E5%AF%BC%E5%85%A5Xcode%E6%96%87%E4%BB%B6%E6%8E%92%E5%BA%8F%E9%94%99%E4%B9%B1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://dongjiawang.top/2019/07/02/2019-07-02-导入Xcode文件排序错乱的问题/</id>
    <published>2019-07-02T08:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.509Z</updated>
    
    <content type="html"><![CDATA[<p>平时通过Xcode的<code>File</code>选项或者通过鼠标向Xcode的工程中添加文件时，文件目录的排序会变得错乱。</p><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20190702152816.png" alt></p><p>这时候可以使用Xcode的自带的sort功能对文件进行排序，选中需要排序的文件，点击Xcode导航的<code>Edit</code>，选择<code>sort</code>，然后根据自己的习惯，选择名称排序或者类别排序。</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20190702153049.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平时通过Xcode的&lt;code&gt;File&lt;/code&gt;选项或者通过鼠标向Xcode的工程中添加文件时，文件目录的排序会变得错乱。&lt;/p&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/dongjiawang/Blog
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>MapView使用Autolayout无法自动定位到用户位置</title>
    <link href="https://dongjiawang.top/2019/06/26/2019-06-26-MapView%E4%BD%BF%E7%94%A8Autolayout%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D%E5%88%B0%E7%94%A8%E6%88%B7%E4%BD%8D%E7%BD%AE/"/>
    <id>https://dongjiawang.top/2019/06/26/2019-06-26-MapView使用Autolayout无法自动定位到用户位置/</id>
    <published>2019-06-26T04:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.509Z</updated>
    
    <content type="html"><![CDATA[<p>一般在设置了<code>MKMapView</code>的<code>frame</code>的时候，会自动跳转到当前用户对位置进行显示。</p><p>有时候需要用的<code>Masonry</code>进行布局，这时候发现虽然已经获取到了用户的位置，但是<code>mapView</code>并没有跳到用户的位置进行显示。</p><p>解决这个问题，可以配合<code>CLLocationManager</code>的回调获取到用户的位置，然后把位置传给<code>mapView</code>，更新显示内容。</p><p>如下代码示例：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> mark ----定位代理----</span></span><br><span class="line">- (<span class="keyword">void</span>)locationManager:(<span class="built_in">CLLocationManager</span> *)manager didUpdateLocations:(<span class="built_in">NSArray</span>&lt;<span class="built_in">CLLocation</span> *&gt; *)locations &#123;</span><br><span class="line">  <span class="comment">// 获取到的location</span></span><br><span class="line">    <span class="built_in">CLLocation</span> *location = locations.firstObject;    </span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> coordinate = [location coordinate];</span><br><span class="line">    <span class="comment">// 停止地理位置更新</span></span><br><span class="line">    [manager stopUpdatingLocation];</span><br><span class="line">  <span class="comment">// 数值越小显示的越精确</span></span><br><span class="line">    <span class="built_in">MKCoordinateSpan</span> span = <span class="built_in">MKCoordinateSpanMake</span>(<span class="number">0.05</span>, <span class="number">0.05</span>);</span><br><span class="line">    <span class="built_in">MKCoordinateRegion</span> region = <span class="built_in">MKCoordinateRegionMake</span>(coordinate, span);</span><br><span class="line">  <span class="comment">// 更新mapView 的显示</span></span><br><span class="line">    [<span class="keyword">self</span>.mapView setRegion:region animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般在设置了&lt;code&gt;MKMapView&lt;/code&gt;的&lt;code&gt;frame&lt;/code&gt;的时候，会自动跳转到当前用户对位置进行显示。&lt;/p&gt;
&lt;p&gt;有时候需要用的&lt;code&gt;Masonry&lt;/code&gt;进行布局，这时候发现虽然已经获取到了用户的位置，但是&lt;code&gt;m
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS自定义字体</title>
    <link href="https://dongjiawang.top/2019/06/18/2019-06-18-iOS%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/"/>
    <id>https://dongjiawang.top/2019/06/18/2019-06-18-iOS自定义字体/</id>
    <published>2019-06-18T04:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.508Z</updated>
    
    <content type="html"><![CDATA[<ol><li>将字体文件导入到工程中，并且在<strong>info.plist</strong>中添加关于<strong>font</strong>的配置。<br><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20190618103352.png" alt></li></ol><ol start="2"><li><p>在<code>TARGETS -&gt; Build Phases -&gt; Copy Bundle Resources</code>中添加引用。</p><p><img src="https://cdn.jsdelivr.net/gh/dongjiawang/BlogImage@1.0/img/20190618103843.png" alt></p></li></ol><ol start="3"><li><p>字体的使用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fontNames = [<span class="string">"MFTongXin_Noncommercial-Regular"</span>,</span><br><span class="line">                     <span class="string">"MFJinHei_Noncommercial-Regular"</span>,</span><br><span class="line">                     <span class="string">"MFZhiHei_Noncommercial-Regular"</span>,</span><br><span class="line">                     <span class="string">"Zapfino"</span>,</span><br><span class="line">                     <span class="string">"Gaspar Regular"</span>]</span><br><span class="line"><span class="comment">// 把字体添加到数组中</span></span><br></pre></td></tr></table></figure><p>通过<code>tableView</code>展示</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cell.textLabel?.text = text</span><br><span class="line">cell.textLabel?.textColor = <span class="type">UIColor</span>.white</span><br><span class="line">cell.textLabel?.font = <span class="type">UIFont</span>(name: <span class="keyword">self</span>.fontNames[indexPath.row], size: <span class="number">14</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;将字体文件导入到工程中，并且在&lt;strong&gt;info.plist&lt;/strong&gt;中添加关于&lt;strong&gt;font&lt;/strong&gt;的配置。&lt;br&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/dongjiawang/BlogI
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>命令行配置搬瓦工的SS</title>
    <link href="https://dongjiawang.top/2019/06/10/2019-06-10-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%85%8D%E7%BD%AE%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84SS/"/>
    <id>https://dongjiawang.top/2019/06/10/2019-06-10-命令行配置搬瓦工的SS/</id>
    <published>2019-06-10T07:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.508Z</updated>
    
    <content type="html"><![CDATA[<p>原来的时候搬瓦工可以一键配置SS，参考这篇<strong><a href="https://dongjiawang.top/2017/10/27/2017-10-27-bandwagon-config/">《配置搬瓦工》</a></strong> ，后来就没有这个选项了。</p><p>不过现在可以使用命令行安装配置。</p><p>最好是使用SSH连接到VPS，可参考上篇文章，连接SSH。</p><h5 id="安装wget工具"><a href="#安装wget工具" class="headerlink" title="安装wget工具"></a>安装wget工具</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br></pre></td></tr></table></figure><h5 id="安装SS服务"><a href="#安装SS服务" class="headerlink" title="安装SS服务"></a>安装SS服务</h5><p>一次运行下面三个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget — no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line"></span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line"></span><br><span class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure><p>根据内容，依次填写<strong>密码</strong>、<strong>端口号</strong>、<strong>选择加密方式</strong>，然后回车开始安装。</p><p>然后记录下红色区域的信息，就可以使用SS了。</p><p><img src="https://raw.githubusercontent.com/dongjiawang/BlogImage/master/img/20190610150423.png" alt></p><h5 id="配置多用户"><a href="#配置多用户" class="headerlink" title="配置多用户"></a>配置多用户</h5><p>安装好SS服务，再配置多用户的时候，就跟上篇文章中的操作比较相似。</p><p>在终端中 输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>删掉里面的内容，替换成下面自定义的：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> "server":"my_server_ip",  #填入你的IP地址</span><br><span class="line"> "local_address": "127.0.0.1",</span><br><span class="line"> "local_port":1080,</span><br><span class="line">  "port_password": &#123;</span><br><span class="line">      "8381": "自定义密码",    #端口号，密码</span><br><span class="line">      "8382": "自定义密码",</span><br><span class="line">      "8383": "自定义密码"      #最后一个用户后面不用逗号</span><br><span class="line"> &#125;,</span><br><span class="line"> "timeout":300,</span><br><span class="line"> "method":"aes-256-cfb",</span><br><span class="line"> "fast_open": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>退出<strong>vi</strong></p><h5 id="重启SS服务"><a href="#重启SS服务" class="headerlink" title="重启SS服务"></a>重启SS服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure><h5 id="关闭防火墙："><a href="#关闭防火墙：" class="headerlink" title="关闭防火墙："></a>关闭防火墙：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure><h5 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原来的时候搬瓦工可以一键配置SS，参考这篇&lt;strong&gt;&lt;a href=&quot;https://dongjiawang.top/2017/10/27/2017-10-27-bandwagon-config/&quot;&gt;《配置搬瓦工》&lt;/a&gt;&lt;/strong&gt; ，后来就没有这个选项了。&lt;
      
    
    </summary>
    
      <category term="工具" scheme="https://dongjiawang.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS进入后台的模糊效果</title>
    <link href="https://dongjiawang.top/2019/06/05/2019-06-05-iOS%E8%BF%9B%E5%85%A5%E5%90%8E%E5%8F%B0%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/"/>
    <id>https://dongjiawang.top/2019/06/05/2019-06-05-iOS进入后台的模糊效果/</id>
    <published>2019-06-05T07:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.508Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义遮盖view</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>)<span class="built_in">UIVisualEffectView</span> *visualEffectView;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIVisualEffectView</span> *)visualEffectView&#123;</span><br><span class="line">    <span class="keyword">if</span> (!_visualEffectView) &#123;</span><br><span class="line">        <span class="built_in">UIBlurEffect</span> *blurEffect = [<span class="built_in">UIBlurEffect</span> effectWithStyle:<span class="built_in">UIBlurEffectStyleLight</span>];</span><br><span class="line">        _visualEffectView = [[<span class="built_in">UIVisualEffectView</span> alloc] initWithEffect:blurEffect];</span><br><span class="line">        _visualEffectView.frame = [<span class="built_in">UIScreen</span> mainScreen].bounds;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _visualEffectView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>监听app状态</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)applicationWillResignActive:(<span class="built_in">UIApplication</span> *)application &#123;</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication].keyWindow addSubview:<span class="keyword">self</span>.visualEffectView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)applicationDidBecomeActive:(<span class="built_in">UIApplication</span> *)application &#123;</span><br><span class="line">    <span class="keyword">if</span> (_visualEffectView) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.visualEffectView removeFromSuperview];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS检测是否越狱</title>
    <link href="https://dongjiawang.top/2019/06/04/2019-06-04-iOS%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E8%B6%8A%E7%8B%B1/"/>
    <id>https://dongjiawang.top/2019/06/04/2019-06-04-iOS检测是否越狱/</id>
    <published>2019-06-04T14:00:00.000Z</published>
    <updated>2020-09-26T07:11:33.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p>遍历文件目录，查看是否可以获取越狱后的文件</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BOOL</span> root = <span class="literal">NO</span>;</span><br><span class="line"><span class="built_in">NSFileManager</span> *fileManager=[<span class="built_in">NSFileManager</span> defaultManager];</span><br><span class="line"><span class="built_in">NSArray</span> *pathArray = @[<span class="string">@"/etc/ssh/sshd_config"</span>,</span><br><span class="line">                       <span class="string">@"/usr/libexec/ssh-keysign"</span>,</span><br><span class="line">                       <span class="string">@"/usr/sbin/sshd"</span>,</span><br><span class="line">                       <span class="string">@"/usr/sbin/sshd"</span>,</span><br><span class="line">                       <span class="string">@"/bin/sh"</span>,</span><br><span class="line">                       <span class="string">@"/bin/bash"</span>,</span><br><span class="line">                       <span class="string">@"/etc/apt"</span>,</span><br><span class="line">                       <span class="string">@"/Application/Cydia.app/"</span>,</span><br><span class="line">                       <span class="string">@"/Library/MobileSubstrate/MobileSubstrate.dylib"</span></span><br><span class="line">                       ];</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">NSString</span> *path <span class="keyword">in</span> pathArray) &#123;</span><br><span class="line">    root = [fileManager fileExistsAtPath:path];</span><br><span class="line">  <span class="comment">// 如果存在这些目录，就是已经越狱</span></span><br><span class="line">    <span class="keyword">if</span> (root) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>通过获取 <em>dyld_image</em> 判断是否有动态库</p><blockquote><p>需要引用到头文件 <em>&lt;mach-o/dyld.h&gt;</em></p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count = _dyld_image_count();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *dyld = _dyld_get_image_name(i);</span><br><span class="line">    <span class="built_in">NSString</span> *dylibPath = [[<span class="built_in">NSString</span> alloc] initWithCString:dyld encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">  <span class="comment">// 判断路径 是否 /Library/MobileSubstrate/DynamicLibraries</span></span><br><span class="line">  <span class="comment">// 或者判断dylib的名称</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h2><p>判断<em>URL Scheme</em></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSURL</span> *scheme = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"cydia://package/com.example.package"</span>];</span><br><span class="line"><span class="keyword">if</span>([[<span class="built_in">UIApplication</span> sharedApplication] canOpenURL:scheme])&#123;</span><br><span class="line">  <span class="comment">// 已经越狱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; class=&quot;headerlink&quot; title=&quot;第一种&quot;&gt;&lt;/a&gt;第一种&lt;/h2&gt;&lt;p&gt;遍历文件目录，查看是否可以获取越狱后的文件&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="iOS" scheme="https://dongjiawang.top/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://dongjiawang.top/source/Tags/iOS/"/>
    
  </entry>
  
</feed>
